
version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.7
    commands:
      # Terraform
      - apt-get update && apt-get install -y gnupg software-properties-common curl
      - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
      - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      - apt-get update && apt-get install terraform
      
      # Kubectl
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl 
      
      
  build:
    commands:
      - terraform --version
      - cd ./Terraform
      - aws s3 ls
      - terraform init #-input=false
      - terraform plan -lock=false #-var-file="secret.tfvars" -out=tfplan -input=false 
      #- terraform destroy -auto-approve -var-file="secret.tfvars" 
      - terraform apply -auto-approve -lock=false #-var-file="secret.tfvars" #-input=false tfplan 
      #- terraform show
      #- aws eks --region eu-west-2 update-kubeconfig --name project_cluster
      - cd ..
      #- docker login -u "aabdurrahman" -p "w3d((7y088&7y*£n&(!"4080NU(*£$"
      #- cd spring-petclinic-angular
      #- docker build -t aabdurrahman/frontend:latest
      #- docker push aabdurrahman/frontend:latest
      #- cd ..
      #- cd spring-petclinic-rest
      #- docker build aabdurrahman/backend:latest
      #- docker push aabdurrahman/backend:latest
      #- cd ..
      #- cd nginx
      #- docker build -t aabdurrahman/nginx:latest
      #- docker push -t aabdurrahman/nginx:latest
      #- docker-compose up -d

      #- kubectl create namespace clusterspace
      - kubectl apply -f /deploy/frontend.yaml
      - kubectl apply -f /deploy/backend.yaml
      - kubectl apply -f /deploy/ngninx.yaml
      



